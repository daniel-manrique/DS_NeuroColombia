---
title-block-banner: true
title: "Data tables handling for NeuroColombia research project"
subtitle: "Data analysis notebook"
date: today
date-format: full
author: 
  - name: "Daniel Manrique-Castano"
    orcid: 0000-0002-1912-1764
    degrees:
      - PhD
    affiliation: 
      - name: Digital Research Alliance of Canada 
        department: Research Data Management
note: "GitHub: https://daniel-manrique.github.io/"
keywords: 
  - Epidemiology
  - Neuropsychology
  - Mental healh
  - Colombia 
   
license: "CC BY"

format:
   typst:
    toc: true
    toc-depth: 2
    columns: 1
   html:
    code-fold: false
    embed-resources: true
    toc: true
    toc-depth: 2
    toc-location: left
    number-sections: true
    theme: spacelab

knitr:
  opts_chunk: 
    warning: false
    message: false
---

## Install and load packages

We install the required packages to open and handle the data tables. 

```{r}
if (!requireNamespace("dplyr", quietly = TRUE)) install.packages("dplyr")
if (!requireNamespace("readxl", quietly = TRUE)) install.packages("readxl")
if (!requireNamespace("ggplot2", quietly = TRUE)) install.packages("ggplot2")
if (!requireNamespace("here", quietly = TRUE)) install.packages("here")
if (!requireNamespace("tidyr", quietly = TRUE)) install.packages("tidyr")
if (!requireNamespace("tibble", quietly = TRUE)) install.packages("tibble")

library(dplyr)
library(readxl)
library(ggplot2)
library(here)
library(tidyr)
library(tibble)

```

## Load data tables

We load three data tables associated with neuropsichological diagnostics (`Ministery_DiagnosticData.xlsx`) and population data for each city in Colombia (`DANE_PopulationData_2005-2019.xlsx` and `DANE_PopulationData_2005-2019.xlsx`). 

```{r}

Ministery_Data <- read_excel(here("Data_Processed/Ministery_DiagnosticData.xlsx")) 
Dane_Data_2019 <- read_excel(here("Data_Raw/DANE_PopulationData_2005-2019.xlsx")) 
Dane_Data_2035 <- read_excel(here("Data_Raw/DANE_PopulationData_2020-2035.xlsx")) 
                          
```

## Data processing

### Subseting of data tables

Next, we subset the `Ministery_Data` to obtain the age (Edad) of interest for the current analysis. 

```{r}
# We select the rows containing ages from 0 to 11 years old
Ministery_Data <- Ministery_Data %>% 
  filter(Edad >= 0, Edad <= 11)
```

We inspect the results

```{r}
head(Ministery_Data)
```
Now, we merge the Dane_Data_2019 and Dane_Data_2035 in a single dataset (`Dane_Data_Total`) and then subset the rows of interest, which includes the counts of men (Hombres) and women (Mujeres) from 0 to 11 years old.. 

```{r}
# We merge the datasets
Dane_Data_Total <- rbind(Dane_Data_2019, Dane_Data_2035)

# We select the rows containing total counts for ÁREA GEOGRÁFICA (Including urban and rural areas)
Dane_Data_Total <- subset(Dane_Data_Total, `ÁREA GEOGRÁFICA` == "Total")

# We subset ID variables and columns containing counts for population between 0 and 11 years old
Dane_Data_Total <- Dane_Data_Total %>% 
  select(DP, DPNOM, DPMP, MPIO, AÑO, `ÁREA GEOGRÁFICA`, matches("^(Hombres|Mujeres)_([0-9]|1[0-1])$"))
```

Here, we inspect the resulting data for `Dane_Data_Total`.

```{r}
head(Dane_Data_Total)
```

### Relating information between data tables

In this step, we transform the `Dane_Data_Total` from wide to long format and setup the variable `Edad` as numeric.  

```{r}

# Reshape Dane_Data_Total to long format:
Dane_Data_Total_long <- Dane_Data_Total %>%
  pivot_longer(
    cols = c(starts_with("Hombres_"), starts_with("Mujeres_")),
    names_to = c("Sexo", "Edad"),
    names_sep = "_",
    values_to = "Poblacion"
  )

Dane_Data_Total_long$Edad <- as.numeric(Dane_Data_Total_long$Edad)
```

We create a new column called "Poblacion", which includes the reference population for the number of diagnostics in the `Ministery_Data` dataset.

```{r}
head(Dane_Data_Total_long)
```

Then, we pair the counts per age from `Dane_Data_Total_long` to the `Ministery_Data` dataset, considering city (`Municipio`), year (`Año`), gender (`Sexo`) and age (`Edad`) 

```{r}
# Merge the reshaped reference population with Ministery_Data:
Ministery_Data_with_pop <- Ministery_Data %>%
  left_join(Dane_Data_Total_long,
            by = c("Municipio" = "DPMP",    # City match: Municipio vs. DPMP
                   "Año" = "AÑO",           # Year match: Año vs. AÑO
                   "Sexo",                  # Gender match
                   "Edad"                   # Age match
            ))
```
Next, we generate a column to indicate if the city (`Municipio`) is a Departemental capital or not.

```{r}
# We create a lookup table for department capitals
capitals <- tibble(
  Departamento = c("Amazonas", "Antioquia", "Arauca", "Atlántico", "Bolívar", 
                   "Boyacá", "Caldas", "Caquetá", "Casanare", "Cauca", "Cesar", 
                   "Chocó", "Córdoba", "Cundinamarca", "Guainía", "Guaviare", 
                   "Huila", "La Guajira", "Magdalena", "Meta", "Nariño", 
                   "Norte de Santander", "Putumayo", "Quindío", "Risaralda", 
                   "San Andrés y Providencia", "Santander", "Sucre", "Tolima", 
                   "Valle del Cauca", "Vaupés", "Vichada", "Bogotá, D.C."),
  CapitalMunicipio = c("Leticia", "Medellín", "Arauca", "Barranquilla", "Cartagena", 
                       "Tunja", "Manizales", "Florencia", "Yopal", "Popayán", "Valledupar", 
                       "Quibdó", "Montería", "Bogotá", "Inírida", "San José del Guaviare", 
                       "Neiva", "Riohacha", "Santa Marta", "Villavicencio", "Pasto", 
                       "Cúcuta", "Mocoa", "Armenia", "Pereira", "San Andrés", 
                       "Bucaramanga", "Sincelejo", "Ibagué", "Cali", "Mitú", "Puerto Carreño", "Bogotá, D.C.")
)

# We perform a left join with the capitals lookup and then create the new "Capital" column.
Ministery_Data_with_capital <- Ministery_Data_with_pop %>%
  left_join(capitals, by = "Departamento") %>%
  mutate(Capital = if_else(Municipio == CapitalMunicipio, "Si", "No"))
```

Finally, we clean the data subseting the columns of interest and elimintating NAS

```{r}
Ministery_Data_Compiled <- Ministery_Data_with_capital %>% 
  select(Año, Año_Cod, Departamento, Municipio, Capital, Diagnostico, Sexo, Edad, Cantidad, Poblacion)

Ministery_Data_Compiled <- na.omit(Ministery_Data_Compiled)
```

We inspect the resulting dataset for analysis

```{r}
head(Ministery_Data_Compiled)
```

And write a .cvs file in the "Data_Processed" folder.

```{r}
write.csv(Ministery_Data_Compiled, "Data_Processed/Ministery_DiagnosticData_Compiled.csv")
```

